<?php
// $Id$

/**
 * @file
 * E-Center testing
 *
 * Uses a silly testing method (and we may add simpletests later). For all
 * defined functions returned by ecenter_test_theme() of the form
 * ecenter_test_TESTNAME create a menu callback at ecenter-tests/TESTNAME
 * that calls said theme function. Then it is up to the test module
 * developer to provide said theme functions.
 */

/**
 * Implementation of hook_perm().
 */
function ecenter_test_perm() {
  return array('view ecenter tests',);
}

/**
 * Implementation of hook_theme().
 */
function ecenter_test_theme() {
  return array(
    'ecenter_test_html' => array(
      'arguments' => array(),
    ),
    'ecenter_test_combobox' => array(
      'arguments' => array(),
    ),
    'ecenter_test_jqplot' => array(
      'arguments' => array(),  
    ),
    'ecenter_test_ecenter_network' => array(
      'arguments' => array(),  
    ),
    'ecenter_test_visual_traceroute' => array(
      'template' => 'ecenter-test-visual-traceroute',
      'arguments' => array(),  
    ),
    'ecenter_test_data_clients' => array(
      'arguments' => array(),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function ecenter_test_menu() {
  $items = array();
  $items['ecenter-tests'] = array(
    'title' => 'E-Center Tests',
    'page callback' => 'menu_tree',
    'page arguments' => array('navigation'),
    'access arguments' => array('view ecenter tests'),
    'weight' => 10,
  );
  foreach (ecenter_test_theme() as $key=>$item) {
    $arg = str_replace('ecenter_test_', '', $key);  
    $items['ecenter-tests/'. str_replace('_', '-', $arg)] = array(
      'title' => ucfirst(str_replace('_', ' ', $arg)),
      'page callback' => 'theme',
      'page arguments' => array($key),
      'access arguments' => array('view ecenter tests'),
    );
  }
  return $items;
}

function theme_ecenter_test_html() {
  return file_get_contents(dirname(__FILE__) . '/markup/html-markup.html');
}

function theme_ecenter_test_combobox() {
  $options = array();
  for ($i = 0; $i < 500; $i++) {
    $options[] = 'Option '. $i;
  }
  $form = array(
    'options' => array(
      '#id' => 'options',
      '#type' => 'combobox',
      '#options' => $options,
      '#default_value' => 0,
    ),
  );
  return drupal_render($form);
}

function theme_ecenter_test_jqplot() {
 $plot_options = array(
    'width' => 700,
    'height' => 200,
    'hideTables' => FALSE,
    'dependencies' => array('canvasTextRenderer'),
    'plotOptions' => array(
      'seriesDefaults' => array(
        'shadow' => FALSE,
        'pointLabels' => array(
          'show' => TRUE,
          'edgeTolerance' => 3,
        ),
      ),
      'legend' => array(
        'show' => TRUE,
      ),
      'axes' => array(
        'xaxis' => array(
          'autoscale' => TRUE,
          'label' => 'x axis',
          'labelRenderer' => '$.jqplot.CanvasAxisLabelRenderer',
          'renderer' => '$.jqplot.CategoryAxisRenderer',          
        ),
        'yaxis' => array(
          'autoscale' => TRUE,
          'label' => 'y axis',
          'labelRenderer' => '$.jqplot.CanvasAxisLabelRenderer',
        ),
      ),
      'pointLabels' => array('show' => TRUE,),
      'linehighlighter' => array(
        'show' => TRUE,
      ),
    ),
  );
  jqplot_register_tablechart('#chart', $plot_options);

  $header = array(t('X val'), t('Series 1'), t('Series 2'));
  for ($i = 0; $i < 10; $i++) {
    $rows[] = array(array('data' => $i, 'header' => TRUE), rand(0, 100), rand(20, 100));
  }
  return theme('jqplot_table', $header, $rows, array('id' => 'chart'));
}

function theme_ecenter_test_ecenter_network() {
  extract(_ecenter_network_extract_query());
  if ($src && $dst && $start && $end) {
    $data = ecenter_network_get_data($src, $dst, $start, $end);
  }
  else {
    $data = ecenter_network_get_data('hub:SLAC', 'hub:ANL', '2011-03-30 19:30:00', '2011-03-30 20:30:00');
  }
  dpm($data);
  return ' ';
}

function theme_ecenter_test_data_clients() {
  $drs_client = ecenter_network_get_client();
  $ads_client = ecenter_network_get_client(FALSE, 'ads');

  /*
  $src = 'hub:SLAC';
  $dst = 'hub:FNAL';
  $start = '2011-06-10 17:00:00';
  $end = '2011-06-10 23:00:00';
  */

  $src = 'hub:SLAC';
  $dst = 'hub:ORNL';
  $start = '2011-06-13 08:20:00';
  $end = '2011-06-13 16:15:00';
  $type = 'owamp';

  // Parse out query type
  list($src_type, $src_value) = explode(':', $data['src'], 2);
  list($dst_type, $dst_value) = explode(':', $data['dst'], 2);

  $output = '<h2>Data request</h2>';
 
  $fn_start = microtime(true);
  $drs_result = $drs_client->getData($src, $dst, $start, $end);
  $fn_end = microtime(true);
  
  $output .= '<h3>Raw results</h3>';
  $output .= kpr($drs_result, TRUE);
  $output .= 'Performance: '. round($fn_end - $fn_start, 4) .' sec';

  $fn_start = microtime(true);
  $parsed = ecenter_network_parse_response($drs_result);
  $fn_end = microtime(true);

  $output .= '<h3>Parsed results</h3>';
  $output .= kpr($parsed, TRUE);
  $output .= 'Performance: '. round($fn_end - $fn_start, 4) .' sec';
  
  $output .= '<h2>Anomaly detection request</h2>';
  
  $output .= '<h3>'. $type . '</h3>';

  $fn_start = microtime(true);
  $result = $ads_client->getData($src, $dst, $start, $end, $type);
  $fn_end = microtime(true);

  $output .= '<h4>Dynamic (get) results</h4>';
  $output .= kpr($result, TRUE);
  $output .= 'Performance: '. round($fn_end - $fn_start, 4) .' sec';

  $data = array(
    'src_'. $src_type => $src_value,
    'dst_'. $dst_type => $dst_value,
    'start' => $start,
    'end' => $end,
    'data' => $drs_result['raw'],
    'data_type' => $type,
  );

  $fn_start = microtime(true);
  $result = $ads_client->getStaticData($data);
  $fn_end = microtime(true);

  $output .= '<h4>Static (get) results</h4>';
  $output .= kpr($result, TRUE);
  $output .= 'Performance: '. round($fn_end - $fn_start, 4) .' sec';

  $fn_start = microtime(true);
  $result = $ads_client->postData($data);
  $fn_end = microtime(true);

  $output .= '<h4>Static (post) results</h4>';
  $output .= kpr($result, TRUE);
  $output .= 'Performance: '. round($fn_end - $fn_start, 4) .' sec';
  
  return $output;

}

function template_preprocess_ecenter_test_visual_traceroute(&$vars) {
  drupal_add_css(libraries_get_path('jquery-svg') .'/jquery.svg.css');
  drupal_add_js(libraries_get_path('jquery-svg') .'/jquery.svg.js');
  drupal_add_js(drupal_get_path('module', 'ecenter_network') .'/js/jquery.traceroute.js');
  drupal_add_js(drupal_get_path('module', 'ecenter_test') .'/ecenter-test.js');


  $vars['traceroutes'] = array(
    'base' => array( // Base traceroute
      array(
        'hop_ip' => '195.34.21.14',
        'hop_id' => '195_34_21_14',
        'hub_name' => 'foo',
        'hub' => 'FOO',
      ),
      array(
        'hop_ip' => '25.12.29.2',
        'hop_id' => '25_12_29_2',
        'hub_name' => 'bar',
        'hub' => 'BAR',
      ),
      array(
        'hop_ip' => '23.23.120.100',
        'hop_id' => '23_23_120_100',
        'hub_name' => 'baz',
        'hub' => 'BAZ',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'foofoo',
        'hub' => 'FOOFOO',
      ),
      array(
        'hop_ip' => '199.135.190.45',
        'hop_id' => '199_135_190_45',
        'hub_name' => 'foobar',
        'hub' => 'FOOBAR',
      ),
      array(
        'hop_ip' => '120.76.192.10',
        'hop_id' => '120_76_192_10',
        'hub_name' => 'foobaz',
        'hub' => 'FOOBAZ',
      ),
      array(
        'hop_ip' => '121.74.192.10',
        'hop_id' => '121_74_192_10',
        'hub_name' => 'barfoo',
        'hub' => 'BARFOO',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'barbar',
        'hub' => 'BARBAR',
      ),
      array(
        'hop_ip' => '111.47.150.2',
        'hop_id' => '111_47_150_2',
        'hub_name' => 'barbaz',
        'hub' => 'BARBAZ',
      ),
    ),
    'missing_one' => array( // Missing hop
      array(
        'hop_ip' => '195.34.21.14',
        'hop_id' => '195_34_21_14',
        'hub_name' => 'foo',
        'hub' => 'FOO',
      ),
      array(
        'hop_ip' => '25.12.29.2',
        'hop_id' => '25_12_29_2',
        'hub_name' => 'bar',
        'hub' => 'BAR',
      ),
      array(
        'hop_ip' => '23.23.120.100',
        'hop_id' => '23_23_120_100',
        'hub_name' => 'baz',
        'hub' => 'BAZ',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'foofoo',
        'hub' => 'FOOFOO',
      ),
      array(
        'hop_ip' => '199.135.190.45',
        'hop_id' => '199_135_190_45',
        'hub_name' => 'foobar',
        'hub' => 'FOOBAR',
      ),
      array(
        'hop_ip' => '121.74.192.10',
        'hop_id' => '121_74_192_10',
        'hub_name' => 'barfoo',
        'hub' => 'BARFOO',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'barbar',
        'hub' => 'BARBAR',
      ),
      array(
        'hop_ip' => '111.47.150.2',
        'hop_id' => '111_47_150_2',
        'hub_name' => 'barbaz',
        'hub' => 'BARBAZ',
      ),
    ),
    'missing_multiple' => array( // Skip multiple hops
      array(
        'hop_ip' => '195.34.21.14',
        'hop_id' => '195_34_21_14',
        'hub_name' => 'foo',
        'hub' => 'FOO',
      ),
      array(
        'hop_ip' => '23.23.120.100',
        'hop_id' => '23_23_120_100',
        'hub_name' => 'baz',
        'hub' => 'BAZ',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'foofoo',
        'hub' => 'FOOFOO',
      ),
      array(
        'hop_ip' => '199.135.190.45',
        'hop_id' => '199_135_190_45',
        'hub_name' => 'foobar',
        'hub' => 'FOOBAR',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'barbar',
        'hub' => 'BARBAR',
      ),
      array(
        'hop_ip' => '111.47.150.2',
        'hop_id' => '111_47_150_2',
        'hub_name' => 'barbaz',
        'hub' => 'BARBAZ',
      ),
    ),
    'add_one' => array( // Add one hop
      array(
        'hop_ip' => '195.34.21.14',
        'hop_id' => '195_34_21_14',
        'hub_name' => 'foo',
        'hub' => 'FOO',
      ),
      array(
        'hop_ip' => '25.12.29.2',
        'hop_id' => '25_12_29_2',
        'hub_name' => 'bar',
        'hub' => 'BAR',
      ),
      array(
        'hop_ip' => '23.23.120.100',
        'hop_id' => '23_23_120_100',
        'hub_name' => 'baz',
        'hub' => 'BAZ',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'foofoo',
        'hub' => 'FOOFOO',
      ),
      array(
        'hop_ip' => '199.135.190.45',
        'hop_id' => '199_135_190_45',
        'hub_name' => 'foobar',
        'hub' => 'FOOBAR',
      ),
      array(
        'hop_ip' => '120.76.192.10',
        'hop_id' => '120_76_192_10',
        'hub_name' => 'foobaz',
        'hub' => 'FOOBAZ',
      ),
      array(
        'hop_ip' => '76.12.150.200',
        'hop_id' => '76_12_150_200',
        'hub_name' => 'bazfoo',
        'hub' => 'BAZFOO',
      ),
      array(
        'hop_ip' => '121.74.192.10',
        'hop_id' => '121_74_192_10',
        'hub_name' => 'barfoo',
        'hub' => 'BARFOO',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'barbar',
        'hub' => 'BARBAR',
      ),
      array(
        'hop_ip' => '111.47.150.2',
        'hop_id' => '111_47_150_2',
        'hub_name' => 'barbaz',
        'hub' => 'BARBAZ',
      ),
    ),
    'add_multiple' => array( // Add multiple hops
      array(
        'hop_ip' => '195.34.21.14',
        'hop_id' => '195_34_21_14',
        'hub_name' => 'foo',
        'hub' => 'FOO',
      ),
      array(
        'hop_ip' => '25.12.29.2',
        'hop_id' => '25_12_29_2',
        'hub_name' => 'bar',
        'hub' => 'BAR',
      ),
      array(
        'hop_ip' => '23.23.120.100',
        'hop_id' => '23_23_120_100',
        'hub_name' => 'baz',
        'hub' => 'BAZ',
      ),
      array(
        'hop_ip' => '76.12.150.200',
        'hop_id' => '76_12_150_200',
        'hub_name' => 'bazfoo',
        'hub' => 'BAZFOO',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'foofoo',
        'hub' => 'FOOFOO',
      ),
      array(
        'hop_ip' => '199.135.190.45',
        'hop_id' => '199_135_190_45',
        'hub_name' => 'foobar',
        'hub' => 'FOOBAR',
      ),
      array(
        'hop_ip' => '120.76.192.10',
        'hop_id' => '120_76_192_10',
        'hub_name' => 'foobaz',
        'hub' => 'FOOBAZ',
      ),
      array(
        'hop_ip' => '10.76.11.10',
        'hop_id' => '10_76_11_10',
        'hub_name' => 'bazbar',
        'hub' => 'BAZBAR',
      ),
      array(
        'hop_ip' => '10.70.12.155',
        'hop_id' => '10_70_12_155',
        'hub_name' => 'bazbaz',
        'hub' => 'BAZBAZ',
      ),
      array(
        'hop_ip' => '121.74.192.10',
        'hop_id' => '121_74_192_10',
        'hub_name' => 'barfoo',
        'hub' => 'BARFOO',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'barbar',
        'hub' => 'BARBAR',
      ),
      array(
        'hop_ip' => '111.47.150.2',
        'hop_id' => '111_47_150_2',
        'hub_name' => 'barbaz',
        'hub' => 'BARBAZ',
      ),
    ),
    'combined' => array( // Combo
      array(
        'hop_ip' => '195.34.21.14',
        'hop_id' => '195_34_21_14',
        'hub_name' => 'foo',
        'hub' => 'FOO',
      ),
      array(
        'hop_ip' => '25.12.29.2',
        'hop_id' => '25_12_29_2',
        'hub_name' => 'bar',
        'hub' => 'BAR',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'foofoo',
        'hub' => 'FOOFOO',
      ),
      array(
        'hop_ip' => '199.135.190.45',
        'hop_id' => '199_135_190_45',
        'hub_name' => 'foobar',
        'hub' => 'FOOBAR',
      ),
      array(
        'hop_ip' => '120.76.192.10',
        'hop_id' => '120_76_192_10',
        'hub_name' => 'foobaz',
        'hub' => 'FOOBAZ',
      ),
      array(
        'hop_ip' => '121.74.192.10',
        'hop_id' => '121_74_192_10',
        'hub_name' => 'barfoo',
        'hub' => 'BARFOO',
      ),
      array(
        'hop_ip' => '10.70.12.155',
        'hop_id' => '10_70_12_155',
        'hub_name' => 'bazbaz',
        'hub' => 'BAZBAZ',
      ),
      array(
        'hop_ip' => '92.12.150.200',
        'hop_id' => '92_12_150_200',
        'hub_name' => 'barbar',
        'hub' => 'BARBAR',
      ),
      array(
        'hop_ip' => '111.47.150.2',
        'hop_id' => '111_47_150_2',
        'hub_name' => 'barbaz',
        'hub' => 'BARBAZ',
      ),
    ),
  );
}
