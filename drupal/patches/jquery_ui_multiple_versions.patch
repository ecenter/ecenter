? jquery_ui_multiple_versions.patch
diff -u -p -r1.6.2.2 jquery_ui.module
--- jquery_ui.module	21 Jun 2009 03:43:03 -0000	1.6.2.2
+++ jquery_ui.module	3 Jan 2011 05:02:25 -0000
@@ -34,9 +34,12 @@ else {
  *   An array of what additional files (other than UI core) should be loaded
  *   on the page, or a string with a single file name.
  */
-function jquery_ui_add($files = array()) {
+function jquery_ui_add($files = array(), $version = NULL) {
   static $loaded_files, $ui_core, $effects_core;
-  $jquery_ui_path = JQUERY_UI_PATH . '/ui';
+  if (!$version || ($version != '1.8' && $version != '1.7' && $version != '1.6')) {
+    $version = variable_get('jquery_ui_default_version', '1.6');
+  }
+  $jquery_ui_path = JQUERY_UI_PATH .'-'.$version. '/ui';
   $compression = variable_get('jquery_update_compression_type', 'mini');
 
   // Convert file to an array if it's not one already, to compensate for
@@ -46,38 +49,40 @@ function jquery_ui_add($files = array())
   }
 
   // If core hasn't been added yet, add it.
-  if (!isset($ui_core)) {
-    $ui_core = TRUE;
-    jquery_ui_add(array('ui.core'));
+  if (!isset($ui_core[$version])) {
+    $ui_core[$version] = TRUE;
+    jquery_ui_add(array('ui.core'), $version);
   }
 
+  $prefix = ($version == '1.8') ? 'jquery.' : '';
+
   // Loop through list of files to include and add them to the page.
   foreach ($files as $file) {
     // Any effects files require the effects core file.
-    if (!isset($effects_core) && strpos($file, 'effects.') === 0) {
-      $effects_core = TRUE;
-      jquery_ui_add(array('effects.core'));
+    if (!isset($effects_core[$version]) && strpos($file, 'effects.') === 0) {
+      $effects_core[$version] = TRUE;
+      jquery_ui_add(array('effects.core'), $version);
     }
 
     // Load other files.
-    if (!isset($loaded_files[$file])) {
+    if (!isset($loaded_files[$version][$file])) {
       switch ($compression) {
         case 'none':
-          $file_path = "$file.js";
+          $file_path = "$prefix$file.js";
           break;
 
         case 'pack':
-          $file_path = "packed/$file.packed.js";
+          $file_path = "packed/$prefix$file.packed.js";
           break;
 
         case 'mini':
         default:
-          $file_path = "minified/$file.min.js";
+          $file_path = "minified/$prefix$file.min.js";
           break;
       }
       $js_path = $jquery_ui_path . '/' . $file_path;
       drupal_add_js($js_path);
-      $loaded_files[$file] = $js_path;
+      $loaded_files[$version][$file] = $js_path;
     }
   }
 }
diff --git jquery_ui.install jquery_ui.install
index 11afaec..0a5f1d7 100644
--- jquery_ui.install
+++ jquery_ui.install
@@ -7,41 +7,6 @@
  */
 
 /**
- * Implementation of hook_requirements().
- */
-function jquery_ui_requirements($phase) {
-  $requirements = array();
-  $t = get_t();
-  $jquery_ui_version = 0;
-
-  if ($phase == 'install') {
-    // The jquery_ui_get_version() function is in the .module file, which isn't
-    // loaded yet.
-    include_once dirname(__FILE__) . '/jquery_ui.module';
-  }
-
-  $requirements['jquery_ui']['title'] = $t('jQuery UI');
-  if ($jquery_ui_version = jquery_ui_get_version()) {
-    // Everything looks good; display the current jQuery UI version.
-    $requirements['jquery_ui']['value'] = $jquery_ui_version;
-    $requirements['jquery_ui']['severity'] = REQUIREMENT_OK;
-  }
-  else {
-    // Required library wasn't found. Abort installation.
-    $requirements['jquery_ui']['value'] = $t('Not found');
-    // Provide a download link to the jQuery UI development bundle. The provided
-    // link will list the latest 1.6.x build.
-    $requirements['jquery_ui']['description'] = $t('The <a href="@jqueryui">jQuery UI</a> plugin is missing. <a href="@download">Download</a> and extract it to your <em>jquery_ui</em> module directory.', array(
-      '@jqueryui' => 'http://jqueryui.com',
-      '@download' => 'http://code.google.com/p/jquery-ui/downloads/list?q=1.6',
-    ));
-    $requirements['jquery_ui']['severity'] = REQUIREMENT_ERROR;
-  }
-
-  return $requirements;
-}
-
-/**
  * Implementation of hook_uninstall().
  */
 function jquery_ui_uninstall() {
