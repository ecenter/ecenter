diff --git jquery_ui.install jquery_ui.install
index 5d74f07..1994e33 100644
--- jquery_ui.install
+++ jquery_ui.install
@@ -6,43 +6,6 @@
  */
 
 /**
- * Implementation of hook_requirements().
- */
-function jquery_ui_requirements($phase) {
-  $requirements = array();
-  $t = get_t();
-  $jquery_ui_version = 0;
-
-  if ($phase == 'install') {
-    // The jquery_ui_get_version() function is in the .module file, which isn't
-    // loaded yet.
-    include_once dirname(__FILE__) . '/jquery_ui.module';
-  }
-
-  $requirements['jquery_ui']['title'] = $t('jQuery UI');
-  if ($jquery_ui_version = jquery_ui_get_version()) {
-    // Everything looks good; display the current jQuery UI version.
-    $requirements['jquery_ui']['value'] = $jquery_ui_version;
-    $requirements['jquery_ui']['severity'] = REQUIREMENT_OK;
-  }
-  else {
-    // Required library wasn't found. Abort installation.
-    $requirements['jquery_ui']['value'] = $t('Not found');
-    // Provide a download link to the jQuery UI development bundle. The provided
-    // link will list the latest 1.6.x build.
-    $requirements['jquery_ui']['description'] = $t('The <a href="@jqueryui">jQuery UI</a> plugin is missing. <a href="@download">Download</a> and extract it into the <code>@directory</code> directory. Rename the extracted folder to <code>@library-folder</code>.', array(
-      '@jqueryui' => 'http://jqueryui.com',
-      '@download' => 'http://code.google.com/p/jquery-ui/downloads/list?q=1.6',
-      '@directory' => 'sites/all/libraries',
-      '@library-folder' => 'jquery.ui',
-    ));
-    $requirements['jquery_ui']['severity'] = REQUIREMENT_ERROR;
-  }
-
-  return $requirements;
-}
-
-/**
  * Implementation of hook_uninstall().
  */
 function jquery_ui_uninstall() {
diff --git jquery_ui.module jquery_ui.module
index 8e47caa..8c47871 100644
--- jquery_ui.module
+++ jquery_ui.module
@@ -19,10 +19,13 @@
  *   An array of what additional files (other than UI core) should be loaded
  *   on the page, or a string with a single file name.
  */
-function jquery_ui_add($files = array()) {
+function jquery_ui_add($files = array(), $version = NULL) {
   static $loaded_files, $ui_core, $effects_core;
 
-  $jquery_ui_path = jquery_ui_get_path();
+  if (!$version || ($version != '1.8' && $version != '1.7' && $version != '1.6')) {
+    $version = variable_get('jquery_ui_default_version', '1.7');
+  }
+  $jquery_ui_path = jquery_ui_get_path($version);
   if ($jquery_ui_path === FALSE) {
     return FALSE;
   }
@@ -36,10 +39,12 @@ function jquery_ui_add($files = array()) {
   }
 
   // If core hasn't been added yet, add it.
-  if (!isset($ui_core)) {
-    $ui_core = TRUE;
-    jquery_ui_add(array('ui.core'));
+  if (!isset($ui_core[$version])) {
+    $ui_core[$version] = TRUE;
+    jquery_ui_add(array('ui.core'), $version);
   }
+  
+  $prefix = ($version == '1.8') ? 'jquery.' : '';
 
   // Loop through list of files to include and add them to the page.
   foreach ($files as $file) {
@@ -50,24 +55,24 @@ function jquery_ui_add($files = array()) {
     }
 
     // Load other files.
-    if (!isset($loaded_files[$file])) {
+    if (!isset($loaded_files[$version][$file])) {
       switch ($compression) {
         case 'none':
-          $file_path = "$file.js";
+          $file_path = "$prefix$file.js";
           break;
 
         case 'pack':
-          $file_path = "packed/$file.packed.js";
+          $file_path = "packed/$prefix$file.packed.js";
           break;
 
         case 'mini':
         default:
-          $file_path = "minified/$file.min.js";
+          $file_path = "minified/$prefix$file.min.js";
           break;
       }
       $js_path = $jquery_ui_path . '/' . $file_path;
       drupal_add_js($js_path);
-      $loaded_files[$file] = $js_path;
+      $loaded_files[$version][$file] = $js_path;
     }
   }
 }
@@ -75,25 +80,28 @@ function jquery_ui_add($files = array()) {
 /**
  * Returns the path to the jQuery UI library or FALSE if not found.
  */
-function jquery_ui_get_path() {
-  static $path;
+function jquery_ui_get_path($version = NULL) {
+  static $paths;
+
+  $key = ($version !== NULL) ? $version : 'default';
+  $suffix = ($version !== NULL) ? '-'. $version : '';
 
-  if (isset($path)) {
-    return $path;
+  if (isset($paths[$key])) {
+    return $paths[$key];
   }
   $path = FALSE;
 
   // Libraries API integration.
   if (function_exists('libraries_get_path')) {
-    $path = libraries_get_path('jquery.ui');
+    $path = libraries_get_path('jquery.ui'. $suffix);
     // Libraries API 1.x returns a default path; 2.x returns FALSE.
     if ($path !== FALSE && !file_exists($path)) {
       $path = FALSE;
     }
   }
   // Manually check sites/all/libraries in case Libraries API is not available.
-  elseif (file_exists('./sites/all/libraries/jquery.ui')) {
-    $path = 'sites/all/libraries/jquery.ui';
+  elseif (file_exists('./sites/all/libraries/jquery.ui'. $suffix)) {
+    $path = 'sites/all/libraries/jquery.ui'. $suffix;
   }
 
   // Check the module directory for backwards compatibility if other methods
@@ -103,16 +111,17 @@ function jquery_ui_get_path() {
     if (defined('MAINTENANCE_MODE') && MAINTENANCE_MODE == 'install') {
       $path = drupal_substr(dirname(__FILE__), drupal_strlen(getcwd()) + 1);
       $path = strtr($path, '\\', '/');
-      $path .= '/jquery.ui';
+      $path .= '/jquery.ui'. $suffix;
     }
     else {
-      $path = drupal_get_path('module', 'jquery_ui') . '/jquery.ui';
+      $path = drupal_get_path('module', 'jquery_ui') . '/jquery.ui'. $suffix;
     }
     if (!file_exists($path)) {
       $path = FALSE;
     }
   }
 
+  $paths[$key] = $path;
   return $path;
 }
 
