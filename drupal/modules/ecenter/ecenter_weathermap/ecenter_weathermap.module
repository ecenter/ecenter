<?php
// $Id$

/**
 * @file
 * E-Center network query interface.
 */

/**
 * Implementation of hook_menu().
 */
function ecenter_weathermap_menu() {
  $items['weathermap'] = array(
    'title' => 'E-Center Weather Map',
    //'page callback' => 'ecenter_weathermap',
    //'page arguments' => array(),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecenter_weathermap_select_form'),
    'access arguments' => array('access ecenter weathermap'),
    'type' => MENU_CALLBACK,
  );
  $items['weathermap/ajax']  = array(
    'title' => 'E-Center Weather Map',
    'page callback' => 'ecenter_weathermap_ajax',
    //'page arguments' => array(2, 3),
    'access arguments' => array('access ecenter weathermap'),
    'file' => 'includes/ecenter_weathermap.ajax.inc',
    'type' => MENU_CALLBACK,
  );
  /*$items['weathermap/data/%/data']  = array(
    'title' => 'E-Center Weather Map',
    'page callback' => 'ecenter_weathermap_ajax',
    'page arguments' => array(2, 3),
    'access arguments' => array('access ecenter weathermap'),
    'file' => 'includes/ecenter_weathermap.ajax.inc',
    'type' => MENU_CALLBACK,
  );*/
  $items['admin/settings/ecenter'] = array(
    'title' => 'E-Center Network Query Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecenter_weathermap_admin_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer ecenter weathermap'),
    'description' => 'Configure the E-Center weather map.',
    'file' => 'includes/ecenter_weathermap.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_menu().
 */
function ecenter_weathermap_perm() {
  return array('access ecenter weathermap', 'administer ecenter weathermap');
}

/**
 * Implementation of hook_theme().
 */
function ecenter_weathermap_theme() {
  //$options = array('file' => drupal_get_path('module', 'ecenter_weathermap') .'/includes/ecenter_weathermap.theme.inc');
  $path = array(
    'path' => drupal_get_path('module', 'ecenter_weathermap') .'/includes',
    'file' => 'ecenter_weathermap.theme.inc'
  );
  return array(
    'ecenter_weathermap_hop_option' => array(
      'arguments' => array(
        'hop' => NULL,
      )
    ) + $path,
   'ecenter_weathermap' => array(
      //'template' => 'ecenter-weathermap',
      'arguments' => array(
        'traceroute' => NULL,
      )
    ) + $path,
   'ecenter_weathermap_traceroute' => array(
      'template' => 'ecenter-weathermap-traceroute',
      'arguments' => array(
        'hops' => NULL,
      )
    ) + $path,
  );
}

/**
 * Implementation of hook_init().
 */
function ecenter_weathermap_init() {
  if (arg(0) == 'weathermap' && !arg(1)) {
    // We need quickselect to get added to behaviors first, so when ensure it executes first
    drupal_add_js(drupal_get_path('module', 'quickselect') .'/js/quickselect-behavior.js');

    // Also need the jquery form library
    drupal_add_js('misc/jquery.form.js');

    // Query UI behavior
    drupal_add_js(drupal_get_path('module', 'ecenter_weathermap') .'/js/query.js');

    // Add jqPlot
    drupal_add_js(drupal_get_path('module', 'ecenter_weathermap') .'/lib/jqplot/excanvas.min.js');
    drupal_add_js(drupal_get_path('module', 'ecenter_weathermap') .'/lib/jqplot/jquery.jqplot.min.js');

    // jqPlot plugins
    drupal_add_js(drupal_get_path('module', 'ecenter_weathermap') .'/lib/jqplot/plugins/jqplot.dateAxisRenderer.min.js');
    drupal_add_js(drupal_get_path('module', 'ecenter_weathermap') .'/lib/jqplot/plugins/jqplot.highlighter.min.js');
    drupal_add_js(drupal_get_path('module', 'ecenter_weathermap') .'/lib/jqplot/plugins/jqplot.cursor.min.js');

    // Additional CSS overrides
    drupal_add_css(drupal_get_path('module', 'ecenter_weathermap') .'/css/plot.css');
  }
}

/**
 * Primary selection form definition.
 */
function _ecenter_weathermap_select_form() {
  // Quick select options
  $quickselect_options = array(
    'emulateDropdown' => TRUE,
    'maxHeight' => '400px',
    'exactMatch' => TRUE,
  );
  $form['network_map_wrapper'] = array(
    '#prefix' => '<div id="weathermap-wrapper">',
    '#suffix' => '</div>',
  );
  $form['network_map_wrapper']['network_map'] = array(
    '#prefix' => '<div id="weathermap">',
    '#value' => '<p>MAP STUB</p>',
    '#suffix' => '</div>',
  );
  $form['start_date'] = array(
    '#type' => 'date_text',
    '#title' => t('Start date'),
    '#default_value' => '2010-07-1 12:00',
  );
  $form['end_date'] = array(
    '#type' => 'date_text',
    '#title' => t('End date'),
    '#default_value' => '2010-07-13 15:00',
  );
  $form['src_ip_wrapper'] = array(
    '#prefix' => '<div id="src-ip-wrapper">',
    '#suffix' => '</div>',
  );
  $form['src_ip_wrapper']['src_ip'] = array(
    '#title' => t('Source IP'),
    '#type' => 'quickselect',
    '#options' => array('' => 'Select a source'),
    '#cols' => 50,
    '#required' => TRUE,
    '#quickselect_options' => $quickselect_options,
    '#ahah' => array(
      'event' => 'blur',
      'path' => ahah_helper_path(array('dst_ip_wrapper')),
      'wrapper' => 'dst-ip-wrapper',
    ),
  );
  $form['dst_ip_wrapper'] = array(
    '#prefix' => '<div id="dst-ip-wrapper">',
    '#suffix' => '</div>',
  );
  $form['dst_ip_wrapper']['dst_ip'] = array(
    '#title' => t('Destination IP'),
    '#type' => 'quickselect',
    '#options' => array('' => 'Select a destination'),
    '#cols' => 50,
    '#required' => FALSE,
    '#disabled' => TRUE,
    '#quickselect_options' => $quickselect_options,
    '#ahah' => array(
      'event' => 'blur',
      'path' => ahah_helper_path(array('data_wrapper')),
      'wrapper' => 'data-wrapper',
    ),
  );
  $form['data_wrapper'] = array(
    '#prefix' => '<div id="data-wrapper">',
    '#suffix' => '</div>',
  );
  $form['data_wrapper']['data'] = array(
    '#prefix' => '<div id="data-results">',
    '#value' => 'DATA!',
    '#suffix' => '</div>',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#attributes' => array('class' => 'no-js'),
  );
  $form['#tree'] = TRUE;
  return $form;
}

/**
 * Primary selection form.
 *
 * The basic form is defined in _ecenter_weathermap_select_form. This function
 * primarily processes the form.
 */
function ecenter_weathermap_select_form(&$form_state) {
  $form = array();
  ahah_helper_register($form, $form_state);

  // Base form
  $form = _ecenter_weathermap_select_form();

  // Services client
  $client = ecenter_weathermap_get_client();

  if (!$client->checkStatus()) {
    return array(
      'error' => array(
        '#value' => '<p class="error">'. t('The E-Center data service is currently experiencing difficulties. Please check back shortly.') .'</p>',
      ),
    );
  }

  // Get query string or POSTed (manually or via AJAX) values
  // Form values "beat" query string values
  $src_ip = (!empty($form_state['storage']['src_ip_wrapper']['src_ip'])) ? $form_state['storage']['src_ip_wrapper']['src_ip'] : $_REQUEST['src_ip'];
  $dst_ip = (!empty($form_state['storage']['dst_ip_wrapper']['dst_ip'])) ? $form_state['storage']['dst_ip_wrapper']['dst_ip'] : $_REQUEST['dst_ip'];
  $start_date = (!empty($form_state['storage']['start_date'])) ? $form_state['storage']['start_date'] : $_REQUEST['start_date'];
  $end_date = (!empty($form_state['storage']['end_date'])) ? $form_state['storage']['end_date'] : $_REQUEST['end_date'];


  // Always get source hubs
  $src_hops = $client->getHubs();
  $src_options = array('' => 'Select a source');
  foreach ($src_hops['response'] as $hop) {
    $src_options[$hop->ip_noted] = theme('ecenter_weathermap_hop_option', $hop);
  }
  $form['src_ip_wrapper']['src_ip']['#options'] = $src_options;

  if ($src_ip) {
    if (array_key_exists($src_ip, $form['src_ip_wrapper']['src_ip']['#options'])) {
      //$form['src_ip_wrapper']['src_ip']['#default_value'] = $src_ip;
    }

    $dst_hops = $client->getHubs($form_state['storage']['src_ip_wrapper']['src_ip']);
    $dst_options = array('' => 'Select a source');
    foreach ($dst_hops['response'] as $hop) {
      $dst_options[$hop->ip_noted] = theme('ecenter_weathermap_hop_option', $hop);
    }
    $form['dst_ip_wrapper']['dst_ip']['#options'] += $dst_options;
    $form['dst_ip_wrapper']['dst_ip']['#disabled'] = FALSE;
    $form['dst_ip_wrapper']['dst_ip']['#required'] = TRUE30
  }
 
  if ($src_ip && $dst_ip && $start_date && $end_date) {
    $data = $client->getData($form_state['storage']['src_ip_wrapper']['src_ip'], $form_state['storage']['dst_ip_wrapper']['dst_ip'], $form_state['storage']['start_date'], $form_state['storage']['end_date']);
    $form['data_wrapper']['data']['#value'] = print_r($data['response'], true);
  }
  return $form;
}

/**
 * Get the E-Center weather map client
 */
function ecenter_weathermap_get_client() {
  static $client = False;
  if (!$client) {
    require_once(dirname(__FILE__) . '/client.php');
    $host = variable_get('ecenter_weathermap_host', 'localhost');
    $port = variable_get('ecenter_weathermap_port', 8000);
    $dir = variable_get('ecenter_weathermap_basedir', '');
    $client = new Ecenter_Data_Service_Client($host, $port, $dir);
  }
  return $client;
}

/**
 * Sanitize the get array
 */
function ecenter_weathermap_sanitize_get() {
  if (!function_exists('filter_input')) {
    return $_GET;
  }
  $get = array();
  foreach (array_keys($_GET) as $key) {
    $get[$key] = filter_input(INPUT_GET, $key, FILTER_SANITIZE_STRING);
  }
  return $get;
}
